# $Id: egammaRecHitsToElectrons.cfg,v 1.2 2006/08/04 19:45:13 rahatlou Exp $
# make electrons (both pixel based and pixel-less) using tracker and ECAL rec hits
#
# Created by Shahram Rahatlou
#
process electrons = {

  ### keep the logging output to a nice level ###
  #include "FWCore/MessageLogger/data/MessageLogger.cfi"

  service = MessageLogger {
     untracked vstring destinations = {"cout"}
     untracked PSet cout = {
       untracked  PSet default = { untracked int32 limit = 0 }
       #untracked  string threshold = "Debug"
     }
  }

  source = PoolSource {
    untracked vstring fileNames =
    {'rfio:/castor/cern.ch/cms/store/unmerged/RelVal/2006/8/14/RelVal090SingleEPt35/GEN-SIM-DIGI-RECO/0006/2601BD05-812B-DB11-B907-0030485618DE.root'}
    untracked int32 maxEvents = -1
    untracked uint32 debugVerbosity = 1
    untracked bool   debugFlag     = true
  }

  # hybrid clustering in the barrel
  include "RecoEcal/EgammaClusterProducers/data/hybridClusteringSequence.cff"
  
  # island clustering for the endcaps
  include "RecoEcal/EgammaClusterProducers/data/islandClusteringSequence.cff"
  
  include "Geometry/CaloEventSetup/data/CaloGeometry.cfi"
  
  # sequence to make si-strip based electrons
  include "RecoEgamma/EgammaElectronProducers/data/electronSequence.cff"

  path p = { hybridClusteringSequence, islandClusteringSequence,
             electronSequence  }

  module out = PoolOutputModule {
    untracked string fileName = "egamma_electrons.root"
    untracked vstring outputCommands = {
       "drop *",
       "keep edmHepMCProduct_*_*_*",

       "keep recoBasicClusters_*_*_*",
       "keep recoSuperClusters_*_*_*",
       "keep recoPreshowerClusters_*_*_*",
       "keep recoClusterShapes_*_*_*",

       "keep *_electronPixelSeeds_*_*",
       "keep *_pixelMatchElectrons_*_*",
       "keep *_siStripElectrons_*_*",

       "keep *_egammaCTFWithMaterialTracks_*_*",
       "keep *_siStripElectronToTrackAssociator_*_*"
    }
  }
  endpath outpath = { out }
}
