# $Id: egammaRecHitsToPixelMatchGsfElectrons.cfg,v 1.9 2007/05/11 13:40:59 uberthon Exp $
# make Gsf electrons from pixel seed tracks
#
# Created by Shahram Rahatlou from example by Ursula Berthon and Claude Charlot
#

process electrons = {
# wait until corrected for gsf
#  include "Configuration/EventContent/data/EventContent.cff"

  ### keep the logging output to a nice level ###
  include "FWCore/MessageLogger/data/MessageLogger.cfi"

  ## debugging services
  #service = EnableFloatingPointExceptions {}
  #service = Tracer {}

  source = PoolSource {
    untracked vstring fileNames =
     {'rfio:/castor/cern.ch/cms/store/RelVal/2007/7/11/RelVal-RelVal160pre4SingleEPt35L1-1184178554/0000/1ACF764E-7530-DC11-BD8C-001617C3B6CE.root'}
    untracked uint32 debugVerbosity = 1
    untracked bool   debugFlag     = true
  }
  untracked PSet maxEvents = {untracked int32 input = -1}

  # complete clustering sequence
  include "RecoEcal/EgammaClusterProducers/data/ecalClusteringSequence.cff"
  
  # sequence to make pixel-based Gsf electrons
  include "RecoEgamma/EgammaElectronProducers/data/pixelMatchGsfElectronSequence.cff"
  
  path p = { ecalClusteringSequence, pixelMatchGsfElectronSequence }

  module out = PoolOutputModule {
    untracked string fileName = "/tmp/charlot/gsfElectrons.root"
#    untracked vstring outputCommands = {
#       "drop *",
#       "keep edmHepMCProduct_*_*_*",
#       "keep recoBasicClusters_*_*_*",
#       "keep recoSuperClusters_*_*_*",
#       "keep recoPreshowerClusters_*_*_*",
#       "keep recoClusterShapes_*_*_*",
#       "keep *_electronPixelSeeds_*_*",
#       "keep *_pixelMatchGsfElectrons_*_*",
#       "keep recoGsfTracks_*_*_*",
#       "keep recoGsfTrackExtras_*_*_*",
#       "keep TrackCandidates*_*_*_*",
#       "keep *_ckfTrackCandidatesBarrel_*_*",
#       "keep *_ckfTrackCandidatesEndcap_*_*",
#       "keep *_ctfWithMaterialTracksBarrel_*_*",
#       "keep *_ctfWithMaterialTracksEndcap_*_*"
#    }
#    #using FEVTEventContent
    untracked vstring outputCommands = {
       "keep *"
    }   
    #using FEVTEventContent
  }
  endpath outpath = { out }
}
