# $Id: egammaRecHitsToPixelMatchGsfElectrons.cfg,v 1.14 2007/11/19 12:28:06 uberthon Exp $
# make Gsf electrons from pixel seed tracks
#
# Created by Shahram Rahatlou from example by Ursula Berthon and Claude Charlot
#

process electrons = {
  include "Configuration/StandardSequences/data/FakeConditions.cff"

  ### keep the logging output to a nice level ###
  include "FWCore/MessageLogger/data/MessageLogger.cfi"

  ## debugging services
  #service = EnableFloatingPointExceptions {}
  #service = Tracer {}

  source = PoolSource {
    untracked vstring fileNames =
    {'rfio:/castor/cern.ch/cms/store/mc/2007/12/2/RelVal-RelValSingleElectronPt35-1196631782/0000/52388364-7CA1-DC11-A0B9-003048562A9E.root'}
    untracked uint32 debugVerbosity = 1
    untracked bool   debugFlag     = true
  }
  untracked PSet maxEvents = {untracked int32 input = 10}

  # complete clustering sequence
  include "RecoEcal/EgammaClusterProducers/data/ecalClusteringSequence.cff"
  
  # sequence to make pixel-based Gsf electrons
  include "RecoEgamma/EgammaElectronProducers/data/pixelMatchGsfElectronSequence.cff"
  
  path p = { ecalClusteringSequence, pixelMatchGsfElectronSequence }

# keep only what is produced in this process
# should avoid problmes that may arise when copyingincompatible data from input file
  module out = PoolOutputModule {
    untracked string fileName = "mytest.root"
    untracked vstring outputCommands = {
       "drop *",
       "keep SiPixel*_*_*_*",
       "keep SiStrip*_*_*_*",
	    "keep HBHER*_*_*_*",
       "keep *_*_*_electrons"
    }
  }
  service = Timing { }
  endpath outpath = { out }
}
