# $Id: egammaRecHitsToPixelMatchGsfElectrons.cfg,v 1.24 2008/04/12 22:36:28 charlot Exp $
# make Gsf electrons from pixel seed tracks
#
# Created by Shahram Rahatlou from example by Ursula Berthon and Claude Charlot
#

process electrons = {
  include "Configuration/StandardSequences/data/FakeConditions.cff"

  ### keep the logging output to a nice level ###
#  include "FWCore/MessageLogger/data/MessageLogger.cfi"
  service = MessageLogger {
         untracked vstring debugModules = {   "pixelMatchGsfElectrons"   }
         untracked vstring categories    =    { "GsfElectronAlgo"}

         untracked vstring destinations =  {    "cout"  }
         untracked PSet cout   =  {
                 untracked string threshold = "DEBUG"
                 untracked PSet DEBUG ={untracked int32 limit = 0}
                 untracked PSet GsfElectronAlgo ={untracked int32 limit = 1000000000000}
         }
    }

  ## debugging services
  #service = EnableFloatingPointExceptions {}
  #service = Tracer {}

  source = PoolSource {
    untracked vstring fileNames =
     {'/store/relval/2008/2/4/RelVal-SingleElectronPt35-1202115095-HLT/0000/AEB9CAE2-51D3-DC11-9D5C-001617C3B6E2.root'}
    untracked uint32 debugVerbosity = 1
    untracked bool   debugFlag     = true
  }
  
  replace PoolSource.fileNames = {
  '/store/relval/2008/4/6/RelVal-RelValSingleElectronPt10-1207410101-HLT/0000/0AC2CD1A-0E04-DD11-844D-000423D99896.root'
#  '/store/relval/2008/4/6/RelVal-RelValQCD_Pt_80_120-1207410101-HLT/0000/00AC1267-1004-DD11-8A54-001617E30F56.root',
#  '/store/relval/2008/4/6/RelVal-RelValQCD_Pt_80_120-1207410101-HLT/0000/04D4612B-0D04-DD11-978E-000423D98FBC.root',
#  '/store/relval/2008/4/6/RelVal-RelValQCD_Pt_80_120-1207410101-HLT/0000/0C95F302-0D04-DD11-AFA6-000423D94494.root',
#  '/store/relval/2008/4/6/RelVal-RelValQCD_Pt_80_120-1207410101-HLT/0000/0E9AC54A-0F04-DD11-9570-000423D8F63C.root',
#  '/store/relval/2008/4/6/RelVal-RelValQCD_Pt_80_120-1207410101-HLT/0000/1020B41B-0E04-DD11-A1E8-001617C3B6E8.root'
  }

  untracked PSet maxEvents = {untracked int32 input = -1}

  # complete clustering sequence
  include "RecoEcal/EgammaClusterProducers/data/ecalClusteringSequence.cff"
  
  # sequence to make pixel-based Gsf electrons
  include "RecoEgamma/EgammaElectronProducers/data/pixelMatchGsfElectronSequence.cff"
  
#  path p = { ecalClusteringSequence, pixelMatchGsfElectronSequence }
  path p = { pixelMatchGsfElectronSequence }

  module out = PoolOutputModule {
    untracked string fileName =
   "/tmp/charlot/egammaRecHitsToPixelMatchGsfElectrons_Pt10_2_1_0_pre1_head100408.root"
    untracked vstring outputCommands = {
       "drop *",
       "keep SiPixel*_*_*_*",
       "keep SiStrip*_*_*_*",
       "keep HBHER*_*_*_*",
       "keep recoBasicClusters*_*_*_*",
       "keep recoSuperClusters*_*_*_*",
       "keep *_iterativeCone5CaloJets_*_*",
#       "keep recoGsf*_*_*_*",
       "keep recoTrackExtras*_*_*_*",
       "keep *_*_*_electrons",
#       "keep *_pixelMatchGsfElectrons_*_*",
       "keep *HepMCProduct_*_*_*"
    }
  }
  service = Timing { }
  endpath outpath = { out }
  
}
