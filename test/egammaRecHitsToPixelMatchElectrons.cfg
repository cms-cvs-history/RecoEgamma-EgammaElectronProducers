# $Id: egammaRecHitsToPixelMatchElectrons.cfg,v 1.13 2006/10/27 21:58:20 uberthon Exp $
# make electrons from pixel seed tracks
#
# Created by Shahram Rahatlou from example by Ursula Berthon and Claude Charlot
#

process electrons = {

  ### keep the logging output to a nice level ###
  include "FWCore/MessageLogger/data/MessageLogger.cfi"

  ## debugging services
  #service = EnableFloatingPointExceptions {}
  #service = Tracer {}

  source = PoolSource {
    untracked vstring fileNames =
    {'rfio:/castor/cern.ch/cms/store/unmerged/RelVal/2006/8/14/RelVal090SingleEPt35/GEN-SIM-DIGI-RECO/0006/2601BD05-812B-DB11-B907-0030485618DE.root'}
    untracked int32 maxEvents = 20
    untracked uint32 debugVerbosity = 1
    untracked bool   debugFlag     = true
  }

  # complete clustering sequence
  include "RecoEcal/EgammaClusterProducers/data/ecalClusteringSequence.cff"
  
  # sequence to make pixel-based electrons
  include "RecoEgamma/EgammaElectronProducers/data/pixelMatchElectronSequence.cff"
  
  path p = { ecalClusteringSequence, pixelMatchElectronSequence }

  module out = PoolOutputModule {
    untracked string fileName = "electrons.root"
    untracked vstring outputCommands = {
       "drop *",
       "keep edmHepMCProduct_*_*_*",
       "keep recoBasicClusters_*_*_*",
       "keep recoSuperClusters_*_*_*",
       "keep recoPreshowerClusters_*_*_*",
       "keep recoClusterShapes_*_*_*",
       "keep *_electronPixelSeeds_*_*",
       "keep *_pixelMatchElectrons_*_*",
       "keep recoTracks_*_*_*",
       "keep recoTrackExtras_*_*_*",
       "keep TrackCandidates*_*_*_*",
       "keep *_ckfTrackCandidatesBarrel_*_*",
       "keep *_ckfTrackCandidatesEndcap_*_*",
       "keep *_ctfWithMaterialTracksBarrel_*_*",
       "keep *_ctfWithMaterialTracksEndcap_*_*"
    }
  }
  endpath outpath = { out }
}
