# $Id: egammaRecHitsToPixelMatchElectrons.cfg,v 1.6 2006/10/02 14:34:42 uberthon Exp $
# make electrons using pixel and ECAL rec hits
#
# Created by Shahram Rahatlou from example by Ursula Berthon and Claude Charlot
#
process electrons = {

  ### keep the logging output to a nice level ###
  include "FWCore/MessageLogger/data/MessageLogger.cfi"

  ## debugging services
  #service = EnableFloatingPointExceptions {}
  #service = Tracer {}

#  service = MessageLogger {
#     untracked vstring suppressDebug   = { "*" }
#     untracked vstring debugModules =	{"pixelMatchElectrons"}
#     untracked vstring destinations = {"cout"}
#     untracked PSet cout = {
#      untracked  string threshold = "DEBUG"
#     }
#  }

  source = PoolSource {
    untracked vstring fileNames =
    {'rfio:/castor/cern.ch/cms/store/unmerged/RelVal/2006/8/14/RelVal090SingleEPt35/GEN-SIM-DIGI-RECO/0006/2601BD05-812B-DB11-B907-0030485618DE.root'}
    untracked int32 maxEvents = 2
    untracked uint32 debugVerbosity = 1
    untracked bool   debugFlag     = true
  }

############ initialize magnetic field #########################
include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

############### initialize geometry #####################
include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"
include "RecoTracker/GeometryESProducer/data/TrackerRecoGeometryESProducer.cfi"

### ESProducers needed for tracking
include "RecoTracker/TransientTrackingRecHit/data/TransientTrackingRecHitBuilder.cfi"
include "TrackingTools/KalmanUpdators/data/KFUpdatorESProducer.cfi"
include "TrackingTools/TrackFitters/data/KFTrajectoryFitterESProducer.cfi"
include "TrackingTools/TrackFitters/data/KFTrajectorySmootherESProducer.cfi"
include "TrackingTools/TrackFitters/data/KFFittingSmootherESProducer.cfi"
include "TrackingTools/MaterialEffects/data/MaterialPropagator.cfi"
include "TrackingTools/MaterialEffects/data/OppositeMaterialPropagator.cfi"
include "RecoLocalTracker/SiPixelRecHits/data/PixelCPEParmError.cfi"
include "RecoLocalTracker/SiStripRecHitConverter/data/StripCPEfromTrackAngle.cfi"
include "RecoLocalTracker/SiStripRecHitConverter/data/SiStripRecHitMatcher.cfi"
include "RecoTracker/CkfPattern/data/CkfTrajectoryBuilderESProducer.cff"

  # hybrid clustering in the barrel
  include "RecoEcal/EgammaClusterProducers/data/hybridClusteringSequence.cff"
  include "Geometry/CaloEventSetup/data/CaloGeometry.cfi"

  # island clustering for the endcaps
  include "RecoEcal/EgammaClusterProducers/data/islandClusteringSequence.cff"

  # electron pixel seed finding
  include "RecoEgamma/EgammaElectronProducers/data/electronPixelSeeds.cff"
  path p = { hybridClusteringSequence, islandClusteringSequence, electronPixelSeeds }

  module out = PoolOutputModule {
    untracked string fileName = "test.root"
#    untracked vstring outputCommands = {
#       "drop *",
#       "keep edmHepMCProduct_*_*_*",
#       "keep recoBasicClusters_*_*_*",
#       "keep recoSuperClusters_*_*_*",
#       "keep recoPreshowerClusters_*_*_*",
#       "keep recoClusterShapes_*_*_*",
#       "keep *_electronPixelSeeds_*_*",
#       "keep *_pixelMatchElectrons_*_*"
#    }
  }
  endpath outpath = { out }
}
